

public class LargestSumContiguosSubArray {
    private static int maxSubArraySum(int a[], int size) {
        int max_so_far = a[0];
        int curr_max = a[0];
        int start = 0, end = 0, s = 0;
        for (int i = 1; i < size; i++) {
            int temp = curr_max + a[i];
            if (a[i] >= temp) {
                curr_max = a[i];
                s = i ;
            } else {
                curr_max = temp;
            }
            if (max_so_far < curr_max) {
                max_so_far = curr_max;
                start = s;
                end = i;
            }
        }
        System.out.println("Starting index " + start);
        System.out.println("Ending index " + end);
        return max_so_far;
    }

    public static void main(String[] args) {
        int a[] = {-2, -3, 4, -1, -2, 1, 5, -3};
        int n = a.length;
        int max_sum = maxSubArraySum(a, n);
        System.out.println("Maximum contiguous sum is "
                + max_sum);
    }

}
